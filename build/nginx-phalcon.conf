server {

        # Listen to 80 port
        listen       *:80;

        # Use hosts
        server_name  phalcon.local *.phalcon.local;

	    # Load default pages
	    index index.php index.html index.htm;

        # Configure root path
	    set $root_path '/var/www/phalcon.local/public';
 	    root $root_path;

        # Set default output charset
        charset utf-8;

	    # Setup error logs
	    error_log /var/www/phalcon.local/logs/phalcon-nginx-error.log; # логирование ошибок

        # Client max body size
	    client_max_body_size 20m;
	    client_body_buffer_size 128k;

        location / {

            try_files $uri $uri/ /index.php;
		    # if file exists return it right away
 		    if (-f $request_filename) {
 			    break;
 		    }

		    # otherwise rewrite it
 		    if (!-e $request_filename) {
 			    rewrite ^(.+)$ /index.php?_url=$1 last;
 			    break;
 		    }

            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';

                # Om nom nom cookies
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';

                 # Custom headers and headers various browsers *should* be OK with but aren't

                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

                # Tell client that this pre-flight info is valid for 20 days

                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            if ($request_method = 'POST') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
            }

            if ($request_method = 'GET') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
            }

	    }

	    location ~ \.php$ {
		    try_files $uri =404;
 		    fastcgi_split_path_info ^(.+\.php)(/.+)$;
 		    fastcgi_pass 127.0.0.1:9000;
 		    fastcgi_index index.php;
 		    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
 		    fastcgi_param HTTP_X_REAL_IP $remote_addr;
   		    fastcgi_param APPLICATION_ENV  development; #APPLICATION_ENV = production
		
		    #fastcgi_cache fastcgi_cache;
		    #fastcgi_cache_valid 200 360s;
		    include fastcgi_params;
	    }

        # Resolve static content for Nginx
        location ~* \.(html|jpg|jpeg|gif|png|ico|css|bmp|js|woff|woff2|eot|swg|ttf)$ {
            root $root_path;
    	    access_log        off;
    	    log_not_found     off;
    	    expires           360d;
        }

		
        location ~ /\. {
	        access_log off;
	        log_not_found off;
	        deny all;
        }

        # Server status monitor
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }
}