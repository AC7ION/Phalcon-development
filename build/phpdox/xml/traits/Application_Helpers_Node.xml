<?xml version="1.0" encoding="UTF-8"?>
<trait xmlns="http://xml.phpdox.net/src" full="Application\Helpers\Node" namespace="Application\Helpers" name="Node" abstract="false" final="false" start="15" end="263">
  <file path="/var/www/backend.local/Application/Helpers" file="Node.php" realpath="/var/www/backend.local/Application/Helpers/Node.php" size="6634" time="2015-07-24T16:57:44+00:00" unixtime="1437757064" sha1="acfcc3619cb9c772b5ff86968c4df3ab7dc561a0" relative="Helpers/Node.php"/>
  <docblock>
    <description compact="Node class. Work with data type"/>
    <package value="Application"/>
    <subpackage value="Helpers"/>
    <since value="PHP &gt;=5.6"/>
    <version value="1.0"/>
    <author value="Stanislav WEB | Lugansk &lt;stanisov@gmail.com&gt;"/>
    <copyright value="Stanilav WEB"/>
    <filesource value="/Application/Helpers/Node.php"/>
  </docblock>
  <method name="isNestedArray" start="22" end="27" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Check if array have nested tree"/>
      <param variable="$a"/>
      <return type="object">
        <type full="Application\Helpers\bool" namespace="Application\Helpers" name="bool"/>
      </return>
    </docblock>
    <parameter name="array" byreference="false" type="array"/>
  </method>
  <method name="searchInArray" start="38" end="53" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Search in array by pair key =&gt; value"/>
      <param type="object" variable="$array">
        <type full="Application\Helpers\array|string" namespace="Application\Helpers" name="array|string"/>
      </param>
      <param type="string" variable="$key"/>
      <param type="string" variable="$value"/>
      <return type="array"/>
    </docblock>
    <parameter name="array" byreference="false" type="{unknown}"/>
    <parameter name="key" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="objectToArray" start="61" end="71" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Convert object to array"/>
      <param variable="$obj"/>
      <return type="array"/>
    </docblock>
    <parameter name="obj" byreference="false" type="{unknown}"/>
  </method>
  <method name="arrayToPair" start="79" end="91" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Convert multidimensional array to key =&gt; pair array"/>
      <param type="array" variable="$array"/>
      <return type="array"/>
    </docblock>
    <parameter name="array" byreference="false" type="array"/>
  </method>
  <method name="setNestedTree" start="100" end="115" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Nested Tree builder"/>
      <param type="array" variable="$elements"/>
      <param type="int" variable="$parentId"/>
      <return type="array"/>
    </docblock>
    <parameter name="elements" byreference="false" type="array"/>
    <parameter name="parentId" byreference="false" type="{unknown}" default="" constant="null"/>
  </method>
  <method name="asRealArray" start="123" end="130" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Reverse object to an array"/>
      <param type="object" variable="$obj"/>
      <return type="array"/>
    </docblock>
    <parameter name="obj" byreference="false" type="{unknown}"/>
  </method>
  <method name="arraySetKey" start="139" end="151" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Set key for multidimensional array"/>
      <param type="array" variable="$array"/>
      <param type="string" variable="$key"/>
      <return type="array"/>
    </docblock>
    <parameter name="array" byreference="false" type="array"/>
    <parameter name="key" byreference="false" type="{unknown}"/>
  </method>
  <method name="arrayMapDeep" start="159" end="169" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Add handler to even array values"/>
      <param variable="$obj"/>
      <return type="array"/>
    </docblock>
    <parameter name="array" byreference="false" type="{unknown}"/>
    <parameter name="callback" byreference="false" type="{unknown}"/>
  </method>
  <method name="dataUnserialize" start="178" end="184" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Unserialize string"/>
      <param variable="$original"/>
      <access value="static"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="original" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="don't attempt to unserialize data that wasn't serialized going in" line="180"/>
    </inline>
  </method>
  <method name="isSerialized" start="194" end="223" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="If is serialized value"/>
      <param type="string" variable="$value"/>
      <param type="string" variable="$value"/>
      <access value="static"/>
      <return type="boolean"/>
    </docblock>
    <parameter name="data" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="if it isn't a string, it isn't serialized" line="196"/>
    </inline>
  </method>
  <method name="isHasConstructor" start="231" end="241" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Check if callable class has constructor"/>
      <param description="Class, object , namespace" type="mixed" variable="$class"/>
      <return type="object">
        <type full="Application\Helpers\bool" namespace="Application\Helpers" name="bool"/>
      </return>
    </docblock>
    <parameter name="class" byreference="false" type="{unknown}"/>
  </method>
  <method name="getObjectProperties" start="251" end="262" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Get object properties"/>
      <param variable="$object"/>
      <param type="int" variable="$flag"/>
      <return type="array"/>
    </docblock>
    <parameter name="object" byreference="false" type="{unknown}"/>
    <parameter name="flag" byreference="false" type="{unknown}" default="" constant="ReflectionProperty::IS_PUBLIC"/>
  </method>
  <users>
    <class full="Application\Services\Advanced\HelpersService" namespace="Application\Services\Advanced" name="HelpersService"/>
  </users>
</trait>
